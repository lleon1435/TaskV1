version: "3.8"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD} 
      - ELASTIC_USER=${ELASTIC_USER}         
    ports:
      - "9200:9200"  
      - "9300:9300"  
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    command: >
      /bin/bash -c "
          /usr/local/bin/docker-entrypoint.sh elasticsearch &
          sleep 30 &&
          if /usr/share/elasticsearch/bin/elasticsearch-users list | grep -q '^$ELASTIC_USER:'; then
            echo 'User $ELASTIC_USER already exists, skipping creation.';
           else
             /usr/share/elasticsearch/bin/elasticsearch-users useradd $ELASTIC_USER -p $ELASTIC_PASSWORD -r superuser;
            echo 'User $ELASTIC_USER created.';
          fi &&
          wait"    
    networks:
      - tasknet
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile   
    restart: unless-stopped
    environment:
      - ELASTIC_USER=${ELASTIC_USER}        
      - ELASTIC_PASS=${ELASTIC_PASSWORD}    
    depends_on:
      - elasticsearch
    networks:
      - tasknet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastapi
    networks:
      - tasknet
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  elasticsearch-data:
    driver: local

networks:
  tasknet:
    driver: bridge
